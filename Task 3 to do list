#include <iostream>
#include <vector>
#include <string>

using namespace std;

struct Task {
    string description;
    bool completed;
};

int main() {
    vector<Task> tasks;

    while (true) {
cout << "\nOptions:\n1. Add Task\n2. View Tasks\n3. Mark Task as Completed\n4. Remove Task\n5. Exit\nEnter your choice: ";
        int choice;
        cin >> choice;

switch (choice) {
            case 1: {
string description;
cout << "Enter task: ";
cin.ignore();
getline(cin, description);
tasks.push_back({description, false});
                break;
            }
            case 2:
if (tasks.empty()) {
cout << "No tasks found." << endl;
} else {
cout << "Tasks:" << endl;
for (size_t i = 0; i < tasks.size(); ++i) {
cout << i + 1 << ". " << tasks[i].description << " - " << (tasks[i].completed ? "Completed" : "Pending") << endl;
                    }
                }
break;
            case 3: {
size_t index;
cout << "Enter task index to mark as completed: ";
cin >> index;
if (index >= 1 && index <= tasks.size()) {
tasks[index - 1].completed = true;
cout << "Task marked as completed." << endl;
} else {
cout << "Invalid task index." << endl;
}
                break;
            }
           case 4: {
size_t index;
cout << "Enter task index to remove: ";
cin >> index;
if (index >= 1 && index <= tasks.size()) {
tasks.erase(tasks.begin() + index - 1);
cout << "Task removed." << endl;
} else {
cout << "Invalid task index." << endl;
}
                break;
}
            case 5:
cout << "Exiting..." << endl;
                return 0;
            default:
cout << "Invalid choice. Please try again." << endl;
        }
    }

    return 0;
}
